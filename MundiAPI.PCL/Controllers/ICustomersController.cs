/*
 * MundiAPI.PCL
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */
using System;
using System.Collections.Generic;
using System.Dynamic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using MundiAPI.PCL;
using MundiAPI.PCL.Utilities;
using MundiAPI.PCL.Http.Request;
using MundiAPI.PCL.Http.Response;
using MundiAPI.PCL.Http.Client;
using MundiAPI.PCL.Models;

namespace MundiAPI.PCL.Controllers
{
    public partial interface ICustomersController
    {
        /// <summary>
        /// Gets all adressess from a customer
        /// </summary>
        /// <param name="customerId">Required parameter: Customer id</param>
        /// <return>Returns the Models.ListAddressesResponse response from the API call</return>
        Models.ListAddressesResponse GetAddresses(string customerId);

        /// <summary>
        /// Gets all adressess from a customer
        /// </summary>
        /// <param name="customerId">Required parameter: Customer id</param>
        /// <return>Returns the Models.ListAddressesResponse response from the API call</return>
        Task<Models.ListAddressesResponse> GetAddressesAsync(string customerId);

        /// <summary>
        /// Get all credit cards from a customer
        /// </summary>
        /// <param name="customerId">Required parameter: Customer Id</param>
        /// <return>Returns the Models.ListCardsResponse response from the API call</return>
        Models.ListCardsResponse GetCustomerCreditCards(string customerId);

        /// <summary>
        /// Get all credit cards from a customer
        /// </summary>
        /// <param name="customerId">Required parameter: Customer Id</param>
        /// <return>Returns the Models.ListCardsResponse response from the API call</return>
        Task<Models.ListCardsResponse> GetCustomerCreditCardsAsync(string customerId);

        /// <summary>
        /// Get all Customers
        /// </summary>
        /// <return>Returns the Models.ListCustomersResponse response from the API call</return>
        Models.ListCustomersResponse GetCustomers();

        /// <summary>
        /// Get all Customers
        /// </summary>
        /// <return>Returns the Models.ListCustomersResponse response from the API call</return>
        Task<Models.ListCustomersResponse> GetCustomersAsync();

        /// <summary>
        /// Creates a new customer
        /// </summary>
        /// <param name="body">Required parameter: Request for creating a customer</param>
        /// <return>Returns the Models.GetCustomerResponse response from the API call</return>
        Models.GetCustomerResponse CreateCustomer(Models.CreateCustomerRequest body);

        /// <summary>
        /// Creates a new customer
        /// </summary>
        /// <param name="body">Required parameter: Request for creating a customer</param>
        /// <return>Returns the Models.GetCustomerResponse response from the API call</return>
        Task<Models.GetCustomerResponse> CreateCustomerAsync(Models.CreateCustomerRequest body);

        /// <summary>
        /// Get a customer
        /// </summary>
        /// <param name="customerId">Required parameter: Customer Id</param>
        /// <return>Returns the Models.GetCustomerResponse response from the API call</return>
        Models.GetCustomerResponse GetCustomer(string customerId);

        /// <summary>
        /// Get a customer
        /// </summary>
        /// <param name="customerId">Required parameter: Customer Id</param>
        /// <return>Returns the Models.GetCustomerResponse response from the API call</return>
        Task<Models.GetCustomerResponse> GetCustomerAsync(string customerId);

        /// <summary>
        /// Updates an address
        /// </summary>
        /// <param name="customerId">Required parameter: Customer Id</param>
        /// <param name="addressId">Required parameter: Address Id</param>
        /// <param name="body">Required parameter: Request for updating an address</param>
        /// <return>Returns the Models.GetAddressResponse response from the API call</return>
        Models.GetAddressResponse UpdateAddress(string customerId, string addressId, Models.UpdateAddressRequest body);

        /// <summary>
        /// Updates an address
        /// </summary>
        /// <param name="customerId">Required parameter: Customer Id</param>
        /// <param name="addressId">Required parameter: Address Id</param>
        /// <param name="body">Required parameter: Request for updating an address</param>
        /// <return>Returns the Models.GetAddressResponse response from the API call</return>
        Task<Models.GetAddressResponse> UpdateAddressAsync(string customerId, string addressId, Models.UpdateAddressRequest body);

        /// <summary>
        /// Updates a credit card
        /// </summary>
        /// <param name="customerId">Required parameter: Customer Id</param>
        /// <param name="cardId">Required parameter: Credit card id</param>
        /// <param name="body">Required parameter: Request for updating a credit card</param>
        /// <return>Returns the Models.GetCreditCardResponse response from the API call</return>
        Models.GetCreditCardResponse UpdateCreditCard(string customerId, string cardId, Models.UpdateCreditCardRequest body);

        /// <summary>
        /// Updates a credit card
        /// </summary>
        /// <param name="customerId">Required parameter: Customer Id</param>
        /// <param name="cardId">Required parameter: Credit card id</param>
        /// <param name="body">Required parameter: Request for updating a credit card</param>
        /// <return>Returns the Models.GetCreditCardResponse response from the API call</return>
        Task<Models.GetCreditCardResponse> UpdateCreditCardAsync(string customerId, string cardId, Models.UpdateCreditCardRequest body);

        /// <summary>
        /// Get a customer's address
        /// </summary>
        /// <param name="customerId">Required parameter: Customer id</param>
        /// <param name="addressId">Required parameter: Address Id</param>
        /// <return>Returns the Models.GetAddressResponse response from the API call</return>
        Models.GetAddressResponse GetAddress(string customerId, string addressId);

        /// <summary>
        /// Get a customer's address
        /// </summary>
        /// <param name="customerId">Required parameter: Customer id</param>
        /// <param name="addressId">Required parameter: Address Id</param>
        /// <return>Returns the Models.GetAddressResponse response from the API call</return>
        Task<Models.GetAddressResponse> GetAddressAsync(string customerId, string addressId);

        /// <summary>
        /// Delete a Customer's address
        /// </summary>
        /// <param name="customerId">Required parameter: Customer Id</param>
        /// <param name="addressId">Required parameter: Address Id</param>
        /// <return>Returns the Models.GetAddressResponse response from the API call</return>
        Models.GetAddressResponse DeleteAddress(string customerId, string addressId);

        /// <summary>
        /// Delete a Customer's address
        /// </summary>
        /// <param name="customerId">Required parameter: Customer Id</param>
        /// <param name="addressId">Required parameter: Address Id</param>
        /// <return>Returns the Models.GetAddressResponse response from the API call</return>
        Task<Models.GetAddressResponse> DeleteAddressAsync(string customerId, string addressId);

        /// <summary>
        /// Delete a customer's credit card
        /// </summary>
        /// <param name="customerId">Required parameter: Customer Id</param>
        /// <param name="cardId">Required parameter: Card Id</param>
        /// <return>Returns the Models.GetCreditCardResponse response from the API call</return>
        Models.GetCreditCardResponse DeleteCreditCard(string customerId, string cardId);

        /// <summary>
        /// Delete a customer's credit card
        /// </summary>
        /// <param name="customerId">Required parameter: Customer Id</param>
        /// <param name="cardId">Required parameter: Card Id</param>
        /// <return>Returns the Models.GetCreditCardResponse response from the API call</return>
        Task<Models.GetCreditCardResponse> DeleteCreditCardAsync(string customerId, string cardId);

        /// <summary>
        /// Creates a new address for a customer
        /// </summary>
        /// <param name="customerId">Required parameter: Customer Id</param>
        /// <param name="body">Required parameter: Request for creating an address</param>
        /// <return>Returns the Models.GetAddressResponse response from the API call</return>
        Models.GetAddressResponse CreateAddress(string customerId, Models.CreateAddressRequest body);

        /// <summary>
        /// Creates a new address for a customer
        /// </summary>
        /// <param name="customerId">Required parameter: Customer Id</param>
        /// <param name="body">Required parameter: Request for creating an address</param>
        /// <return>Returns the Models.GetAddressResponse response from the API call</return>
        Task<Models.GetAddressResponse> CreateAddressAsync(string customerId, Models.CreateAddressRequest body);

        /// <summary>
        /// Get a customer's credit card
        /// </summary>
        /// <param name="customerId">Required parameter: Customer id</param>
        /// <param name="cardId">Required parameter: Card id</param>
        /// <return>Returns the Models.GetCreditCardResponse response from the API call</return>
        Models.GetCreditCardResponse GetCreditCard(string customerId, string cardId);

        /// <summary>
        /// Get a customer's credit card
        /// </summary>
        /// <param name="customerId">Required parameter: Customer id</param>
        /// <param name="cardId">Required parameter: Card id</param>
        /// <return>Returns the Models.GetCreditCardResponse response from the API call</return>
        Task<Models.GetCreditCardResponse> GetCreditCardAsync(string customerId, string cardId);

        /// <summary>
        /// Creates a new credit card for a customer
        /// </summary>
        /// <param name="body">Required parameter: Request for creating a credit card</param>
        /// <param name="customerId">Required parameter: Customer id</param>
        /// <return>Returns the Models.GetCreditCardResponse response from the API call</return>
        Models.GetCreditCardResponse CreateCreditCard(Models.CreateCreditCardRequest body, string customerId);

        /// <summary>
        /// Creates a new credit card for a customer
        /// </summary>
        /// <param name="body">Required parameter: Request for creating a credit card</param>
        /// <param name="customerId">Required parameter: Customer id</param>
        /// <return>Returns the Models.GetCreditCardResponse response from the API call</return>
        Task<Models.GetCreditCardResponse> CreateCreditCardAsync(Models.CreateCreditCardRequest body, string customerId);

        /// <summary>
        /// Updates a customer
        /// </summary>
        /// <param name="customerId">Required parameter: Customer id</param>
        /// <param name="body">Required parameter: Request for updating a customer</param>
        /// <return>Returns the void response from the API call</return>
        void UpdateCustomer(string customerId, Models.UpdateCustomerRequest body);

        /// <summary>
        /// Updates a customer
        /// </summary>
        /// <param name="customerId">Required parameter: Customer id</param>
        /// <param name="body">Required parameter: Request for updating a customer</param>
        /// <return>Returns the void response from the API call</return>
        Task UpdateCustomerAsync(string customerId, Models.UpdateCustomerRequest body);

    }
} 