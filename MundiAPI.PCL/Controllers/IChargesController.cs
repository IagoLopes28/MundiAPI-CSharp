/*
 * MundiAPI.PCL
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */
using System;
using System.Collections.Generic;
using System.Dynamic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using MundiAPI.PCL;
using MundiAPI.PCL.Utilities;
using MundiAPI.PCL.Http.Request;
using MundiAPI.PCL.Http.Response;
using MundiAPI.PCL.Http.Client;
using MundiAPI.PCL.Models;

namespace MundiAPI.PCL.Controllers
{
    public partial interface IChargesController
    {
        /// <summary>
        /// Get a charge from its id
        /// </summary>
        /// <param name="chargeId">Required parameter: Charge id</param>
        /// <return>Returns the Models.GetChargeResponse response from the API call</return>
        Models.GetChargeResponse GetCharge(string chargeId);

        /// <summary>
        /// Get a charge from its id
        /// </summary>
        /// <param name="chargeId">Required parameter: Charge id</param>
        /// <return>Returns the Models.GetChargeResponse response from the API call</return>
        Task<Models.GetChargeResponse> GetChargeAsync(string chargeId);

        /// <summary>
        /// Retries a charge
        /// </summary>
        /// <param name="chargeId">Required parameter: Charge id</param>
        /// <return>Returns the Models.GetChargeResponse response from the API call</return>
        Models.GetChargeResponse RetryCharge(string chargeId);

        /// <summary>
        /// Retries a charge
        /// </summary>
        /// <param name="chargeId">Required parameter: Charge id</param>
        /// <return>Returns the Models.GetChargeResponse response from the API call</return>
        Task<Models.GetChargeResponse> RetryChargeAsync(string chargeId);

        /// <summary>
        /// Lists all charges
        /// </summary>
        /// <return>Returns the Models.ListChargesResponse response from the API call</return>
        Models.ListChargesResponse GetCharges();

        /// <summary>
        /// Lists all charges
        /// </summary>
        /// <return>Returns the Models.ListChargesResponse response from the API call</return>
        Task<Models.ListChargesResponse> GetChargesAsync();

        /// <summary>
        /// Creates a new charge
        /// </summary>
        /// <param name="body">Required parameter: Request for creating a charge</param>
        /// <return>Returns the Models.GetChargeResponse response from the API call</return>
        Models.GetChargeResponse CreateCharge(Models.CreateChargeRequest body);

        /// <summary>
        /// Creates a new charge
        /// </summary>
        /// <param name="body">Required parameter: Request for creating a charge</param>
        /// <return>Returns the Models.GetChargeResponse response from the API call</return>
        Task<Models.GetChargeResponse> CreateChargeAsync(Models.CreateChargeRequest body);

        /// <summary>
        /// Updates the credit card from a charge
        /// </summary>
        /// <param name="body">Required parameter: Request for updating a charge's credit card</param>
        /// <param name="chargeId">Required parameter: Charge id</param>
        /// <return>Returns the Models.GetChargeResponse response from the API call</return>
        Models.GetChargeResponse UpdateChargeCreditCard(Models.UpdateChargeCreditCardRequest body, string chargeId);

        /// <summary>
        /// Updates the credit card from a charge
        /// </summary>
        /// <param name="body">Required parameter: Request for updating a charge's credit card</param>
        /// <param name="chargeId">Required parameter: Charge id</param>
        /// <return>Returns the Models.GetChargeResponse response from the API call</return>
        Task<Models.GetChargeResponse> UpdateChargeCreditCardAsync(Models.UpdateChargeCreditCardRequest body, string chargeId);

        /// <summary>
        /// Updates a charge's payment method
        /// </summary>
        /// <param name="body">Required parameter: Request for updating the payment method from a charge</param>
        /// <param name="chargeId">Required parameter: Charge id</param>
        /// <return>Returns the Models.GetChargeResponse response from the API call</return>
        Models.GetChargeResponse UpdateChargePaymentMethod(Models.UpdateChargePaymentMethodRequest body, string chargeId);

        /// <summary>
        /// Updates a charge's payment method
        /// </summary>
        /// <param name="body">Required parameter: Request for updating the payment method from a charge</param>
        /// <param name="chargeId">Required parameter: Charge id</param>
        /// <return>Returns the Models.GetChargeResponse response from the API call</return>
        Task<Models.GetChargeResponse> UpdateChargePaymentMethodAsync(Models.UpdateChargePaymentMethodRequest body, string chargeId);

        /// <summary>
        /// Cancel a charge
        /// </summary>
        /// <param name="chargeId">Required parameter: Charge id</param>
        /// <param name="body">Optional parameter: Request for cancelling a charge</param>
        /// <return>Returns the Models.GetChargeResponse response from the API call</return>
        Models.GetChargeResponse CancelCharge(string chargeId, Models.CreateCancelChargeRequest body = null);

        /// <summary>
        /// Cancel a charge
        /// </summary>
        /// <param name="chargeId">Required parameter: Charge id</param>
        /// <param name="body">Optional parameter: Request for cancelling a charge</param>
        /// <return>Returns the Models.GetChargeResponse response from the API call</return>
        Task<Models.GetChargeResponse> CancelChargeAsync(string chargeId, Models.CreateCancelChargeRequest body = null);

        /// <summary>
        /// Captures a charge
        /// </summary>
        /// <param name="chargeId">Required parameter: Charge id</param>
        /// <param name="body">Required parameter: Request for capturing a charge</param>
        /// <return>Returns the Models.GetChargeResponse response from the API call</return>
        Models.GetChargeResponse CaptureCharge(string chargeId, Models.CreateCaptureChargeRequest body);

        /// <summary>
        /// Captures a charge
        /// </summary>
        /// <param name="chargeId">Required parameter: Charge id</param>
        /// <param name="body">Required parameter: Request for capturing a charge</param>
        /// <return>Returns the Models.GetChargeResponse response from the API call</return>
        Task<Models.GetChargeResponse> CaptureChargeAsync(string chargeId, Models.CreateCaptureChargeRequest body);

    }
} 